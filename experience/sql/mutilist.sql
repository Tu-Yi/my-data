-- 多表查询

--mysql
SELECT * FROM employeese, departments d where e.dept_id=d.departments_id
SELECT E.last_name,E.salary,S.LEVEL FROM employees E, sal_level S WHERE E.salary BETWEEN 1000 AND 5000
SELECT e.last_name,em.last_name from employees e, employees em where e.manager_id = em.employee_id
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp LEFT JOIN DEPARTMENTS dep on emp.DEPARTMENT_ID=dep.DEPARTMENT_ID
select d.department_name,e.last_name from employees e RIGHT JOIN departments d on e.department_id = d.department_id
-- UNION 剔除重复行   UNION ALL 不剔除
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp LEFT JOIN DEPARTMENTS dep on emp.DEPARTMENT_ID=dep.DEPARTMENT_ID
UNION
select e.last_name,d.department_name from employees e RIGHT JOIN departments d on e.department_id = d.department_id
-- cross join  natural join INNER JOIN
SELECT e.last_name,d.department_name FROM employees e NATURAL JOIN departments d USING(department_id)
SELECT e.last_name,d.department_name FROM employees e inner JOIN departments d on e.department_id = d.department_id
-- 子查询
select last_name,salary from employees where salary >ANY (SELECT salary from employees where last_name='King')
select * from employees where department_id in 
(select department_id from employees where last_name='King') and last_name <> 'King'




-- oracle
-- 内连接 父级在后面
-- 等值连接
select EMP.LAST_NAME,DEP.DEPARTMENT_NAME from EMPLOYEES EMP,DEPARTMENTS DEP where EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID and EMP.LAST_NAME='Taylor'
SELECT EMP.LAST_NAME,DEP.DEPARTMENT_NAME,LO.CITY FROM EMPLOYEES EMP,DEPARTMENTS DEP,LOCATIONS LO WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID AND DEP.LOCATION_ID = LO.LOCATION_ID and EMP.LAST_NAME='Taylor'
-- 非等值连接 != > < BETWEEN AND
select * from EMPLOYEES EMP,JOB_GRADS GR WHERE EMP.SALARY BETWEEN GR.LOWER AND GR.HIGHER
-- 自连接
select WORKER.LAST_NAME,MANAGER.LAST_NAME from EMPLOYEES WORKER ,EMPLOYEES MANAGER WHERE WORKER.MANAGER_ID = MANAGER.MANAGER_ID
-- CROSS JOIN 笛卡尔乘积
-- NATURAL JOIN 只要列名字和类型相同，就都使用等值连接，取最小笛卡尔乘积
select d.DEPARTMENT_NAME,l.CITY from DEPARTMENTS d NATURAL JOIN LOCATIONS l
-- NATURAL JOIN USING唯一指定等值列 USING中的列在where中不能用表名和别名 USING可以指定多个列
select d.DEPARTMENT_NAME,l.CITY from DEPARTMENTS d JOIN LOCATIONS l USING(LOCATION_ID) WHERE LOCATION_ID=1800
-- INNER JOIN 基本和等值连接一样
SELECT EMP.LAST_NAME,DEP.DEPARTMENT_NAME,LO.CITY FROM 
EMPLOYEES EMP INNER JOIN DEPARTMENTS DEP ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID 
INNER JOIN LOCATIONS LO ON DEP.LOCATION_ID = LO.LOCATION_ID
WHERE EMP.EMPLOYEE_ID='202'
-- INNER JOIN using等值
SELECT EMP.LAST_NAME,DEP.DEPARTMENT_NAME,LO.CITY FROM 
EMPLOYEES EMP INNER JOIN DEPARTMENTS DEP using(DEPARTMENT_ID)
INNER JOIN LOCATIONS LO USING(LOCATION_ID)
WHERE EMP.EMPLOYEE_ID='202'

-- 外连接 可以显示孤儿数据
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp LEFT JOIN DEPARTMENTS dep on emp.DEPARTMENT_ID=dep.DEPARTMENT_ID
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp FULL JOIN DEPARTMENTS dep on emp.DEPARTMENT_ID=dep.DEPARTMENT_ID
-- oracle扩展的外连接 (+)不显示所有数据
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp， DEPARTMENTS dep  where EMP.DEPARTMENT_ID(+) = DEP.DEPARTMENT_ID
select emp.LAST_NAME,dep.DEPARTMENT_NAME from EMPLOYEES emp， DEPARTMENTS dep  where EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID(+)

-- 练习
select EMP.LAST_NAME, EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME from EMPLOYEES EMP,DEPARTMENTS DEP where EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
select EMP.LAST_NAME, EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME from EMPLOYEES EMP INNER JOIN DEPARTMENTS DEP ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID
select DISTINCT EMP.JOB_ID, DEP.LOCATION_ID from EMPLOYEES EMP,DEPARTMENTS DEP WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID and EMP.DEPARTMENT_ID=80
SELECT EMP.LAST_NAME,DEP.DEPARTMENT_NAME,LO.CITY FROM EMPLOYEES EMP,DEPARTMENTS DEP,LOCATIONS LO WHERE EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID AND DEP.LOCATION_ID = LO.LOCATION_ID and EMP.COMMISSION_PCT is NOT NULL
select EMP.LAST_NAME, EMP.DEPARTMENT_ID, DEP.DEPARTMENT_NAME from EMPLOYEES EMP,DEPARTMENTS DEP where EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID and EMP.LAST_NAME like '%a%'

SELECT EMP.LAST_NAME,DEP.DEPARTMENT_NAME,LO.CITY FROM 
EMPLOYEES EMP INNER JOIN DEPARTMENTS DEP ON EMP.DEPARTMENT_ID = DEP.DEPARTMENT_ID 
INNER JOIN LOCATIONS LO ON DEP.LOCATION_ID = LO.LOCATION_ID
WHERE LOWER(LO.CITY) = 'toronto'

select WORKER.LAST_NAME,MANAGER.LAST_NAME from EMPLOYEES WORKER LEFT OUTER JOIN EMPLOYEES MANAGER ON (WORKER.MANAGER_ID = MANAGER.employee_id)
-- ⭐
SELECT e.LAST_NAME,e.DEPARTMENT_ID FROM EMPLOYEES e, EMPLOYEES c where e.DEPARTMENT_ID = c.DEPARTMENT_ID and e.EMPLOYEE_ID <> c.EMPLOYEE_ID order by c.DEPARTMENT_ID

select e.LAST_NAME,e.HIRE_DATE from EMPLOYEES e, EMPLOYEES d where d.LAST_NAME='Davies' and d.HIRE_DATE<e.HIRE_DATE

select e.LAST_NAME,e.HIRE_DATE,m.LAST_NAME,m.HIRE_DATE from EMPLOYEES e,EMPLOYEES m where e.MANAGER_ID=m.EMPLOYEE_ID and e.HIRE_DATE<m.HIRE_DATE

-- 子查询 WHERE HAVING FROM

-- 单行子查询 
SELECT e.LAST_NAME,e.SALARY from EMPLOYEES e,EMPLOYEES a WHERE a.LAST_NAME='Abel' and e.SALARY>a.SALARY
select em.LAST_NAME,em.SALARY from EMPLOYEES em WHERE em.SALARY > (select m.SALARY from EMPLOYEES m where m.LAST_NAME='Abel')
select em.LAST_NAME FROM EMPLOYEES em WHERE em.JOB_ID = (select JOB_ID from EMPLOYEES WHERE EMPLOYEE_ID=141) and em.SALARY > (SELECT SALARY from EMPLOYEES WHERE EMPLOYEE_ID=143)
select LAST_NAME,SALARY from EMPLOYEES where SALARY = (SELECT MIN(SALARY) from EMPLOYEES)
SELECT DEPARTMENT_ID,MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING MIN(SALARY) > (SELECT MIN(SALARY) from EMPLOYEES WHERE DEPARTMENT_ID=50)

-- 多行子查询 IN ANY ALL NOT
SELECT DEPARTMENT_ID, LAST_NAME,SALARY from EMPLOYEES e where e.SALARY in (SELECT MIN(em.SALARY) FROM EMPLOYEES em GROUP BY em.DEPARTMENT_ID)
-- <ANY 小于最大值 >ANY 大于最小值
select EMPLOYEE_ID,LAST_NAME,JOB_ID,SALARY from EMPLOYEES where SALARY <ANY (SELECT SALARY from EMPLOYEES WHERE JOB_ID='IT_PROG') and JOB_ID <> 'IT_PROG'
-- <ALL 小于最小值 >ALL 大于最大值
select EMPLOYEE_ID,LAST_NAME,JOB_ID,SALARY from EMPLOYEES where SALARY <ALL (SELECT SALARY from EMPLOYEES WHERE JOB_ID='IT_PROG') and JOB_ID <> 'IT_PROG'

-- 练习
SELECT LAST_NAME,HIRE_DATE from EMPLOYEES WHERE DEPARTMENT_ID  = (SELECT DEPARTMENT_ID from EMPLOYEES WHERE LAST_NAME = 'Zlotkey') and LAST_NAME <>'Zlotkey'
SELECT LAST_NAME,SALARY FROM EMPLOYEES WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
select LAST_NAME from EMPLOYEES where DEPARTMENT_ID in (select DEPARTMENT_ID from EMPLOYEES where LAST_NAME like '%u%')
select DEPARTMENT_ID, LAST_NAME from EMPLOYEES where DEPARTMENT_ID in (select DEPARTMENT_ID from DEPARTMENTS where LOCATION_ID=1700)
select LAST_NAME,SALARY from EMPLOYEES WHERE MANAGER_ID in (SELECT EMPLOYEE_ID from EMPLOYEES WHERE LAST_NAME='King')
select DEPARTMENT_ID, LAST_NAME from EMPLOYEES where DEPARTMENT_ID in (select DEPARTMENT_ID from DEPARTMENTS where DEPARTMENT_NAME='Executive')
SELECT LAST_NAME,SALARY from EMPLOYEES WHERE DEPARTMENT_ID in (select DEPARTMENT_ID from EMPLOYEES where LAST_NAME like '%u%') and SALARY > (select AVG(SALARY) from EMPLOYEES)














